{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","borderColor","className","style","id","type","Navbar","to","title","aboutText","onClick","handleColor","height","width","border","TextForm","useState","text","setText","heading","value","onChange","e","target","rows","disabled","length","newtext","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","newText","split","join","filter","element","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","removecolor","document","body","classList","remove","val","console","log","add","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.649467f0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [myStyle, setMystyle]  = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white' \r\n    // })\r\n\r\n    // const [buttonText, setButton] = useState(\"Enable Dark Mode\")\r\n    \r\n    // const darkMode = ()=>{\r\n    //     if(myStyle.color === 'black'){\r\n    //         setMystyle({\r\n    //             color: 'white',\r\n    //             backgroundColor: 'black',\r\n    //             border: '1px solid white',\r\n    //             borderRadius: '7px'\r\n    //         })\r\n    //         setButton(\"Enable Light Mode\")\r\n    //     }\r\n    //     else {\r\n    //         setMystyle({\r\n    //             color: 'black',\r\n    //             backgroundColor: 'white'\r\n    //         })\r\n    //         setButton(\"Enable Dark Mode\")\r\n    //     }\r\n    // }\r\n    let myStyle = {\r\n        color: props.mode === 'dark'?'white' : '#042743',\r\n        backgroundColor: props.mode === 'dark'?'rgb(36 74 104)' : 'white',\r\n        borderColor: props.mode === 'dark'?'white' : '#042743'\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1 className=\"my-3\" style={{color: props.mode === 'dark'?'white' : 'black'}}>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Accordion Item #1\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Accordion Item #2\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Accordion Item #3\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        {/* <div className=\"container my-3\">\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={darkMode}>{buttonText}</button>\r\n        </div> */}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          {/* <a className=\"navbar-brand\" href=\"/\">{props.title}</a> */}\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n                <Link className=\"nav-link \" id=\"home\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" id=\"about\" to=\"/about\">{props.aboutText}</Link>\r\n              </li>\r\n              \r\n            </ul>\r\n             <div className=\"d-flex\">\r\n              <div className=\"bg-primary rounded mx-2\" onClick={() =>{props.handleColor('primary')}} style={{height: '40px', width: '40px', border: '1px solid black'}}></div>\r\n              <div className=\"bg-warning rounded mx-2\" onClick={() =>{props.handleColor('warning')}} style={{height: '40px', width: '40px', border: '1px solid black'}}></div>\r\n              <div className=\"bg-success rounded mx-2\" onClick={() =>{props.handleColor('success')}} style={{height: '40px', width: '40px', border: '1px solid black'}}></div>\r\n              <div className=\"bg-danger rounded mx-2\" onClick={() =>{props.handleColor('danger')}} style={{height: '40px', width: '40px', border: '1px solid black'}}></div>\r\n              <div className=\"bg-info rounded mx-2\" onClick={() =>{props.handleColor('info')}} style={{height: '40px', width: '40px', border: '1px solid black'}}></div>\r\n              <div className=\"bg-white rounded mx-2\" onClick={() =>{props.handleColor('white')}} style={{height: '40px', width: '40px', border: '1px solid black'}}></div>\r\n              <div className=\"bg-dark rounded mx-2\" onClick={() =>{props.handleColor('dark')}} style={{height: '40px', width: '40px', border: '1px solid white'}}></div>\r\n             </div>\r\n             \r\n            {/* <div className={`form-check form-switch text-${props.mode === 'light'? 'dark': 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`Enable ${props.mode === 'light'? 'dark': 'light'} Mode`}</label>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const handleUpClick = ()=>{\r\n        let newtext = text.toUpperCase()\r\n        setText(newtext)\r\n        props.showAlert(\"Converted to Uppercase\", \"success\")\r\n    }\r\n    const handleOnChange = (e)=>{\r\n        setText(e.target.value)\r\n    }\r\n    const handleLowClick = (e)=>{\r\n        let newtext = text.toLowerCase()\r\n        setText(newtext)\r\n        props.showAlert(\"Converted to Lowercase\", \"success\")\r\n    }\r\n    const handleclear = ()=>{\r\n        setText(\"\")\r\n        props.showAlert(\"Text cleared\", \"success\")\r\n    }\r\n    const handleCopy = ()=>{\r\n        navigator.clipboard.writeText(text) \r\n        props.showAlert(\"Copies to clipboard\", \"success\")\r\n    }\r\n    const removeExtraSpace = ()=>{\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join([\" \"]))\r\n        props.showAlert(\"Extra space removed\", \"success\")\r\n    }\r\n    const [text, setText] = useState(\"\")\r\n    return (\r\n        <>\r\n        <div style={{color: props.mode === 'light'?'black' : 'white'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\" style={{color: props.mode === 'light'?'black' : 'white'}}>\r\n                <textarea className=\"form-control\" style={{backgroundColor: props.mode === 'light'?'white' : '#13466e', color: props.mode === 'light'?'black' : 'white'}} value={text} onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Upercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleclear}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={removeExtraSpace}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode === 'light'?'black' : 'white'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0 ? text : \"Nothing to preview!\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css'\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  const removecolor = () =>{\n    document.body.classList.remove('bg-primary')\n    document.body.classList.remove('bg-warning')\n    document.body.classList.remove('bg-success')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-info')\n  }\n  \n  const handleColor = (val) =>{\n    console.log(val)\n    if(val === 'white'){\n      removecolor()\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title = \"TextUtils - Light Mode\"\n    }\n    else if(val === 'dark'){\n      removecolor()\n      // document.body.classList.add('bg-'+val)\n      // document.body.style.color = 'white'\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743'\n      showAlert(\"Dark mode has been enabled\", \"danger\")\n      document.title = \"TextUtils - Dark Mode\"\n    }\n    else{\n      removecolor()\n      document.body.classList.add('bg-'+val);\n    }\n  }\n  \n  return (\n    <>\n      <Router>\n      <Navbar title=\"TextUtils\" mode={mode} handleColor={handleColor}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n          <Route exact path=\"/\">\n          <TextForm heading=\"Enter the text to analyze\" mode={mode} showAlert={showAlert}/>\n          </Route>\n      </Switch>\n        \n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}